{"repository_name":"cryod","body":"[![Logo](https://github.com/kebasyaty/cryod/raw/v0/logo/logo.svg \"Logo\")](https://github.com/kebasyaty/cryod \"Logo\")\r\n\r\nORM-like API MongoDB for Crystal\r\n\r\n[![CI](https://github.com/kebasyaty/cryod/workflows/CI/badge.svg)](https://github.com/kebasyaty/cryod/actions)\r\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://kebasyaty.github.io/cryod/)\r\n[![Crystal](https://img.shields.io/badge/crystal-v1.10%2B-red)](https://crystal-lang.org/)\r\n[![GitHub license](https://badgen.net/github/license/kebasyaty/cryod)](https://github.com/kebasyaty/cryod/blob/v0/LICENSE)\r\n\r\n## Installation\r\n\r\n1. Add the dependency to your `shard.yml`:\r\n\r\n   ```yaml\r\n   dependencies:\r\n     cryod:\r\n       github: kebasyaty/cryod\r\n   ```\r\n\r\n2. Run `shards install`\r\n\r\n## Usage\r\n\r\n```crystal\r\nrequire \"cryod\"\r\n```\r\n\r\nTODO: Write usage instructions here\r\n\r\n## Development\r\n\r\nTODO: Write development instructions here\r\n\r\n## License\r\n\r\n**This project is licensed under the** [MIT](https://github.com/kebasyaty/cryod/blob/v0/LICENSE \"MIT\").\r\n\r\n## Changelog\r\n\r\n[View the change history.](https://github.com/kebasyaty/cryod/blob/v0/CHANGELOG.md \"View the change history.\")\r\n\r\n## Contributing\r\n\r\n1. Fork it (<https://github.com/kebasyaty/cryod/fork>)\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n\r\n## Contributors\r\n\r\n- [kebasyaty](https://github.com/kebasyaty) Gennady Kostyunin - creator and maintainer\r\n","program":{"html_id":"cryod/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"cryod","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"cryod/Cryod","path":"Cryod.html","kind":"module","full_name":"Cryod","name":"Cryod","abstract":false,"locations":[{"filename":"src\\cryod\\errors.cr","line_number":2,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\cryod\\errors.cr#L2"},{"filename":"src\\cryode.cr","line_number":5,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\cryode.cr#L5"}],"repository_name":"cryod","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\""}],"doc":"ORM-like API MongoDB for Crystal","summary":"<p>ORM-like API MongoDB for Crystal</p>","types":[{"html_id":"cryod/Cryod/CryodException","path":"Cryod/CryodException.html","kind":"class","full_name":"Cryod::CryodException","name":"CryodException","abstract":false,"superclass":{"html_id":"cryod/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"cryod/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"cryod/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cryod/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\cryod\\errors.cr","line_number":3,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\cryod\\errors.cr#L3"}],"repository_name":"cryod","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"cryod/Cryod","kind":"module","full_name":"Cryod","name":"Cryod"}}]},{"html_id":"cryod/Fields","path":"Fields.html","kind":"module","full_name":"Fields","name":"Fields","abstract":false,"locations":[{"filename":"src\\fields\\bool.cr","line_number":3,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\fields\\bool.cr#L3"}],"repository_name":"cryod","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"cryod/Fields/Boolean","path":"Fields/Boolean.html","kind":"struct","full_name":"Fields::Boolean","name":"Boolean","abstract":false,"superclass":{"html_id":"cryod/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cryod/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cryod/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cryod/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\fields\\bool.cr","line_number":4,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\fields\\bool.cr#L4"}],"repository_name":"cryod","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"cryod/Fields","kind":"module","full_name":"Fields","name":"Fields"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src\\fields\\bool.cr","line_number":4,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\fields\\bool.cr#L4"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src\\fields\\bool.cr","line_number":4,"url":"https://github.com/kebasyaty/cryod/blob/690ea5577843eb64a9a219240785bf494c26c163/src\\fields\\bool.cr#L4"},"def":{"name":"initialize","visibility":"Public","body":""}}]}]}]}}